version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: pokedex-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: pokedex
    ports:
      - '5433:5432'  # Using port 5433 to avoid conflict with local PostgreSQL
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - pokedex-network

  backend:
    build:
      context: .
      dockerfile: apps/backend/Dockerfile
    container_name: pokedex-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3000
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/pokedex?schema=public
      CORS_ORIGIN: '*'
    ports:
      - '3000:3000'
    volumes:
      - backend-uploads:/app/apps/backend/uploads
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ['CMD', 'node', '-e', "require('http').get('http://localhost:3000/api/v1/pokemons', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 3s
      start_period: 40s
      retries: 3
    networks:
      - pokedex-network

volumes:
  postgres-data:
    driver: local
  backend-uploads:
    driver: local

networks:
  pokedex-network:
    driver: bridge
